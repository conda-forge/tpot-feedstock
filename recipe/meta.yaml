{% set version = "0.12.2" %}

# TODO: relax after https://github.com/EpistasisLab/tpot/issues/1327
{% set min_python = "python >=3.5,<3.12" %}

# handle undefined PYTHON in `noarch: generic` outputs
{% if PYTHON is not defined %}{% set PYTHON = "$PYTHON" %}{% endif %}

# handle unimportable tests
{% set delete_tests = [
  "tests/tpot_tests.py",
  "tests/stacking_estimator_tests.py",
] %}

package:
  name: tpot-build
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/T/TPOT/TPOT-{{ version }}.tar.gz
  sha256: e92777cf41cbf01ee0439632264d21ef89a1c0b5ec532b73dcb679c3ce67bec1

build:
  number: 0
  noarch: python

requirements:
  host:
    - {{ min_python }}
  run:
    - {{ min_python }}

test:
  commands:
    - echo "the subpackages are tested"

outputs:
  - name: tpot
    build:
      noarch: python
      script:
        - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --disable-pip-version-check
      entry_points:
        - tpot = tpot:main
    requirements:
      host:
        - {{ min_python }}
        - pip
      run:
        - {{ min_python }}
        - deap >=1.2
        - joblib >=0.13.2
        - numpy >=1.16.3
        - pandas >=0.24.2
        - py-xgboost >=1.1.0
        - scikit-learn >=1.4.1
        - scipy >=1.3.1
        - stopit >=1.1.2
        - tqdm >=4.36.1
        - update_checker >=0.16
    test:
      requires:
        - pip
      imports:
        - tpot
      commands:
        - pip check
        - tpot --version
        - tpot --help

  - name: tpot-skrebate
    build:
      noarch: generic
    requirements:
      run:
        - {{ min_python }}
        - {{ pin_subpackage('tpot', max_pin="x.x.x") }}
        - skrebate >=0.3.4
    test:
      imports:
        - tpot
      requires:
        - pip
      commands:
        - pip check

  - name: tpot-mdr
    build:
      noarch: generic
    requirements:
      run:
        - {{ min_python }}
        - {{ pin_subpackage('tpot', max_pin="x.x.x") }}
        - scikit-mdr >=0.4.4
    test:
      imports:
        - tpot
      requires:
        - pip
      commands:
        - pip check

  - name: tpot-dask
    build:
      noarch: generic
    requirements:
      run:
        - {{ min_python }}
        - {{ pin_subpackage('tpot', max_pin="x.x.x") }}
        - dask >=0.18.2
        - dask-ml >=1.0.0
        - distributed >=1.22.1
    test:
      imports:
        - tpot
      requires:
        - pip
      commands:
        - pip check

  - name: tpot-torch
    build:
      noarch: generic
    requirements:
      run:
        - {{ min_python }}
        - {{ pin_subpackage('tpot', max_pin="x.x.x") }}
        - pytorch 1.13.*
    test:
      imports:
        - tpot.builtins.nn
      requires:
        - pip
      commands:
        - pip check

  - name: tpot-imblearn
    build:
      noarch: generic
    requirements:
      run:
        - {{ min_python }}
        - {{ pin_subpackage('tpot', max_pin="x.x.x") }}
        - imbalanced-learn >=0.7.0
    test:
      imports:
        - tpot
      requires:
        - pip
      commands:
        - pip check

  - name: tpot-full
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage('tpot-dask', max_pin="x.x.x") }}
        - {{ pin_subpackage('tpot-imblearn', max_pin="x.x.x") }}
        - {{ pin_subpackage('tpot-mdr', max_pin="x.x.x") }}
        - {{ pin_subpackage('tpot-skrebate', max_pin="x.x.x") }}
        - {{ pin_subpackage('tpot-torch', max_pin="x.x.x") }}
        - {{ pin_subpackage('tpot', max_pin="x.x.x") }}
        - {{ min_python }}
    test:
      imports:
        - tpot
      requires:
        - coverage
        - nose
        - pip
      source_files:
        - tests
      commands:
        - pip check
        - python -c "import os; [os.unlink(p) for p in {{ delete_tests }}]"
        -
          coverage run --source=tpot --branch -m
            nose tests -s -v
              -e test_dask_matches
              -e test_StackingEstimator_4
              -e test_sample_weight_func
              -e one_hot_encoder_tests
              -e test_score_2
              -e test_varOr
              -e test_mate_operator
              -e test_get_params
              -e test_mate_operator_stats_update
        - coverage report --show-missing --skip-covered --fail-under=75

about:
  home: https://epistasislab.github.io/tpot
  license: LGPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: 'A Python tool that automatically creates and optimizes Machine Learning pipelines using genetic programming.'
  dev_url: https://github.com/EpistasisLab/tpot
  description: |
    Consider TPOT your Data Science Assistant. TPOT is a Python Automated
    Machine Learning tool that optimizes machine learning pipelines using
    genetic programming.

    TPOT will automate the most tedious part of machine learning by
    intelligently exploring thousands of possible pipelines to find the best
    one for your data.

    Once TPOT is finished searching (or you get tired of waiting), it provides
    you with the Python code for the best pipeline it found so you can tinker
    with the pipeline from there.

    TPOT is built on top of scikit-learn, so all of the code it generates
    should look familiar... if you're familiar with scikit-learn, anyway.

    TPOT is still under active development and we encourage you to check back
    on this repository regularly for updates.

extra:
  feedstock-name: tpot
  recipe-maintainers:
    - proinsias
    - bollwyvl
    - jay-m-dev
